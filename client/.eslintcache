[{"F:\\Mern Stack\\Project\\whatsapp-mern\\src\\index.js":"1","F:\\Mern Stack\\Project\\whatsapp-mern\\src\\App.js":"2","F:\\Mern Stack\\Project\\whatsapp-mern\\src\\reportWebVitals.js":"3","F:\\Mern Stack\\Project\\whatsapp-mern\\src\\Sidebar.js":"4","F:\\Mern Stack\\Project\\whatsapp-mern\\src\\Chat.js":"5","F:\\Mern Stack\\Project\\whatsapp-mern\\src\\SidebarChat.js":"6","F:\\Mern Stack\\Project\\whatsapp-mern\\src\\axios.js":"7","F:\\Mern Stack\\Semester Project\\whatsapp-mern\\src\\index.js":"8","F:\\Mern Stack\\Semester Project\\whatsapp-mern\\src\\reportWebVitals.js":"9","F:\\Mern Stack\\Semester Project\\whatsapp-mern\\src\\App.js":"10","F:\\Mern Stack\\Semester Project\\whatsapp-mern\\src\\axios.js":"11","F:\\Mern Stack\\Semester Project\\whatsapp-mern\\src\\Chat.js":"12","F:\\Mern Stack\\Semester Project\\whatsapp-mern\\src\\Sidebar.js":"13","F:\\Mern Stack\\Semester Project\\whatsapp-mern\\src\\SidebarChat.js":"14","F:\\Mern Stack\\Semester Project\\whatsapp-mern\\src\\Login.js":"15","F:\\Mern Stack\\Semester Project\\whatsapp-mern\\src\\services\\UserService.js":"16","F:\\Mern Stack\\Semester Project\\whatsapp-mern\\src\\services\\GenericService.js":"17","F:\\Mern Stack\\Semester Project\\whatsapp-mern\\src\\Register.js":"18","F:\\Mern Stack\\Semester Project\\whatsapp-mern\\src\\reducer.js":"19","F:\\Mern Stack\\Semester Project\\whatsapp-mern\\src\\StateProvider.js":"20","F:\\Mern Stack\\Semester Project\\whatsapp-mern\\src\\services\\MessagesService.js":"21"},{"size":500,"mtime":499162500000,"results":"22","hashOfConfig":"23"},{"size":1156,"mtime":1608043891960,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":1579,"mtime":1608035905952,"results":"26","hashOfConfig":"23"},{"size":2611,"mtime":1608049595975,"results":"27","hashOfConfig":"23"},{"size":417,"mtime":1608036053902,"results":"28","hashOfConfig":"23"},{"size":133,"mtime":1608037919403,"results":"29","hashOfConfig":"23"},{"size":694,"mtime":1608652439755,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"31"},{"size":3642,"mtime":1609052007894,"results":"33","hashOfConfig":"31"},{"size":140,"mtime":1608614605418,"results":"34","hashOfConfig":"31"},{"size":6303,"mtime":1609046766924,"results":"35","hashOfConfig":"31"},{"size":1954,"mtime":1609089542103,"results":"36","hashOfConfig":"31"},{"size":3361,"mtime":1609175000208,"results":"37","hashOfConfig":"31"},{"size":3072,"mtime":1609040663067,"results":"38","hashOfConfig":"31"},{"size":1262,"mtime":1608826646523,"results":"39","hashOfConfig":"31"},{"size":1098,"mtime":1608826675544,"results":"40","hashOfConfig":"31"},{"size":2938,"mtime":1608656070189,"results":"41","hashOfConfig":"31"},{"size":418,"mtime":1608652222137,"results":"42","hashOfConfig":"31"},{"size":373,"mtime":1608651833689,"results":"43","hashOfConfig":"31"},{"size":745,"mtime":1608920186608,"results":"44","hashOfConfig":"31"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"1wpewhn",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"yljnvt",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"62"},"F:\\Mern Stack\\Project\\whatsapp-mern\\src\\index.js",[],["98","99"],"F:\\Mern Stack\\Project\\whatsapp-mern\\src\\App.js",[],"F:\\Mern Stack\\Project\\whatsapp-mern\\src\\reportWebVitals.js",[],"F:\\Mern Stack\\Project\\whatsapp-mern\\src\\Sidebar.js",[],"F:\\Mern Stack\\Project\\whatsapp-mern\\src\\Chat.js",[],"F:\\Mern Stack\\Project\\whatsapp-mern\\src\\SidebarChat.js",[],"F:\\Mern Stack\\Project\\whatsapp-mern\\src\\axios.js",[],"F:\\Mern Stack\\Semester Project\\whatsapp-mern\\src\\index.js",[],["100","101"],"F:\\Mern Stack\\Semester Project\\whatsapp-mern\\src\\reportWebVitals.js",[],"F:\\Mern Stack\\Semester Project\\whatsapp-mern\\src\\App.js",["102","103","104","105","106"],"\nimport './App.css';\nimport React from 'react';\nimport Chat from './Chat';\nimport Sidebar from './Sidebar';\nimport Pusher from 'pusher-js';\nimport { useEffect, useState } from 'react';\nimport axios from './axios';\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Login from './Login';\nimport Register from './Register';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useStateValue } from './StateProvider';\nimport messagesService from './services/MessagesService';\nfunction App() {\n  const [users, setUsers] = React.useState([]);\n  const [messages, setMessages] = useState([]);\n  const [userLogin, setUserLogin] = useState();\n  const [{user}, dispatch] = useStateValue();\n  const getUsers=()=>{\n        axios.get(\"users\").then(res=>{\n            setUsers(res.data);\n            console.log(res.data);\n            setUserLogin(localStorage.getItem(\"user\"));\n        }).catch(err=>{\n            console.log(err);\n        });\n    };\n    const getMessages=()=>{\n        axios.get(\"messages\").then(res=>{\n            setMessages(res.data);\n            console.log(res.data);\n          }).catch(err=>{\n            console.log(err);\n        });\n    };\n    const setReceive=()=>{\n      const data=true;\n      messages.map((message)=>{\n        if(message.user_to===user){\n          if(message.viewed===false){\n              messagesService.userViewed(message._id, data);\n          } \n        }\n      });\n    }\n     React.useEffect(getUsers,[]);\n    React.useEffect(getMessages,[]);\n    React.useEffect(setReceive,[messages]);\n \n    useEffect(()=>{\n    var pusher = new Pusher('9a1706ac26a9d3909601', {\n      cluster: 'eu'\n    });\n        const channel = pusher.subscribe('users');\n        channel.bind('inserted', (newUser)=> {\n        setUsers([...users, newUser]);\n        console.log(users);\n  });\n  channel.bind('updated', (newUser)=> {\n        getUsers();\n        console.log(\"from react update \"+ newUser);\n  });\n    // getrid of above code executing again and again\n    return ()=>{\n      channel.unbind_all();\n      channel.unsubscribe();\n    }\n    }, [users]);\n\n  useEffect(()=>{\n   var pusher = new Pusher('1d0c2b10507144f2573d', {\n      cluster: 'ap2'\n    });\n    const channel = pusher.subscribe('messages');\n    channel.bind('inserted', (newMessage)=> {\n      setMessages([...messages, newMessage]); //[...messages, newMessage] means keep all older messages and load newMessage as well\n      \n  });\n  channel.bind('updated', (newMessage)=> {\n        getMessages();\n        console.log(\"from react update Message\"+ messages);\n  });\n    // getrid of above code executing again and again\n    return ()=>{\n      channel.unbind_all();\n      channel.unsubscribe(); \n    }\n  }, [messages]); // here we need to insert dependency\n\n  return (\n    <div className=\"app\">\n       <ToastContainer />\n      <div className=\"app__body\">\n      {!user ? \n       (<Router>\n          <Switch>\n            <Route path=\"/register\">\n              <Register />\n            </Route>\n            <Route path=\"/\">\n              <Login />\n            </Route>\n          </Switch>\n        </Router>) : \n        (<Router>\n          <Switch>\n            <Route path=\"/user/:id\">\n              <Sidebar messages={messages} users={users} user_from={user} />\n              <Chat messages={messages} users={users} user_from={user}/>\n            </Route>\n            <Route path=\"/\">\n              <Sidebar messages={messages} users={users} user_from={user}/>\n            </Route>\n          </Switch>\n        </Router>)\n      }\n      </div>\n    </div>\n  );\n}\nexport default App;","F:\\Mern Stack\\Semester Project\\whatsapp-mern\\src\\axios.js",[],"F:\\Mern Stack\\Semester Project\\whatsapp-mern\\src\\Chat.js",["107","108","109"],"import IconButton from '@material-ui/core/IconButton';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { SearchOutlined,AttachFile, MoreVert } from \"@material-ui/icons\"\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Chat.css';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { useParams } from 'react-router-dom';\r\nimport userService from \"./services/UserService\"\r\nimport messagesService from './services/MessagesService';\r\nfunction Chat({messages,users, user_from}) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [body, setBody] = useState(\"\");\r\n    const [userTop, setUserTop] = useState(\"\");\r\n    const [user_to, setUser_to] = useState(\"\");\r\n    const [last_scene, setLast_scene] = useState(\"\");\r\n    const [to, setTo] = useState(\"\");\r\n    const [from, setFrom] = useState(\"\");\r\n    const {id} = useParams();\r\n    const handleClick = (event) => {\r\n        var today= new Date();\r\n        var date=\"Last Scene:  \"+today.getHours() + \":\" + today.getMinutes() +\"    \"+(today.getMonth()+1)+'-'+today.getDate();\r\n        userService.setTime(userService.getLoggedInUser()._id, date);\r\n        userService.logout();\r\n        setAnchorEl(event.currentTarget);\r\n        window.location.href = \"/\";\r\n  };\r\n  const handleClose = (e) => {\r\n      setAnchorEl(null);\r\n    \r\n  };\r\n    useEffect(()=>{\r\n        if(id){\r\n            users.map((user)=>{\r\n                console.log(\"From Chat ID \"+ id); \r\n                if(user._id===id){\r\n                    setUserTop(user.name);\r\n                    console.log(\"From chat.js      \"+userTop);\r\n                    setUser_to(user.email);\r\n                    setLast_scene(user.last_scene);\r\n                    setTo(user.name);\r\n                    console.log(\"From Chat User \"+ userTop+\" last scene \"+last_scene);\r\n                } if(user.email===user_from){\r\n                    setFrom(user.name);\r\n                }\r\n            })\r\n        }\r\n    },[id]);\r\n    const sendMesssages = async (e)=>{\r\n        e.preventDefault();\r\n        await axios.post(\"http://localhost:9000/api/messages/add\",{user_to, user_from, body});\r\n        setBody(\"\");\r\n    }\r\n    return (\r\n        <div className='chat'>\r\n            <div className=\"chat__header\">\r\n                <Avatar />\r\n                <div className=\"chat__headerInfo\">\r\n                    <h3>{userTop}</h3>\r\n                    <p>{last_scene}</p>\r\n                </div>\r\n                <div className=\"chat__headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert onClick={handleClick}/>\r\n                    </IconButton>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleClose}\r\n                    >\r\n                        <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n                    </Menu>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"chat__body\">\r\n                {messages.map((message)=>{\r\n                \r\n                    if(message.user_from===user_from && message.user_to===user_to ){\r\n                        return  <p className={`chat__message ${message.user_from===user_from && \"chat__receiver\"}`}>\r\n                                    {message.user_from===user_from? <span className=\"chat__name\">{from}</span> : <span className=\"chat__name\">{to}</span> }\r\n                                    {message.body}\r\n                                    <span className=\"chat__timestamp\">\r\n                                        {message.time+\"  \"+message.date}\r\n                                    </span>\r\n                                    {message.viewed === true ? (\r\n                                        <span className={`${message.opened===true && \"chat__read\"}`}>\r\n                                            <DoneAllIcon />\r\n                                        </span>\r\n                                    ): (\r\n                                        <CheckIcon />\r\n                                    )}\r\n                                </p>\r\n                    }else if(message.user_to===user_from && message.user_from===user_to){\r\n                        return  <p className={`chat__message ${message.user_from===user_from && \"chat__receiver\"}`}>\r\n                                    {message.user_from===user_from? <span className=\"chat__name\">{from}</span> : <span className=\"chat__name\">{to}</span> }\r\n                                    {message.body}\r\n                                    <span className=\"chat__timestamp\">\r\n                                        {message.time+\"  \"+message.date}\r\n                                    </span>\r\n                                    {message.opened===false? messagesService.userOpened(message._id, true) : false}\r\n                                    \r\n                                </p>\r\n                    }\r\n                })} \r\n            </div>\r\n\r\n            <div className=\"chat__footer\">\r\n                <IconButton>\r\n                    <InsertEmoticonIcon />\r\n                </IconButton>\r\n                <form>\r\n                    <input \r\n                        value={body}\r\n                        onChange = {(e)=>setBody(e.target.value)}\r\n                        placeholder=\"Type a message\"\r\n                        type=\"text\"/>\r\n                        <button onClick={sendMesssages} type=\"submit\"> Send a message</button>\r\n                </form>\r\n                \r\n                <IconButton>\r\n                    <MicIcon />\r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","F:\\Mern Stack\\Semester Project\\whatsapp-mern\\src\\Sidebar.js",["110"],"import React from 'react';\r\nimport \"./Sidebar.css\";\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {SearchOutlined} from '@material-ui/icons';\r\nimport SidebarChat from './SidebarChat';\r\nfunction Sidebar({messages, users, user_from}) {\r\n    return (\r\n        <div className=\"sidebar\">\r\n           <div className=\"sidebar__header\">\r\n                <Avatar src=\"/ehsan.jpg\" /> \r\n                <div className=\"sidebar__headerRight\">\r\n                    <IconButton>\r\n                        <DonutLargeIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChatIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                 </div>\r\n            </div>\r\n            <div className=\"sidebar__search\">\r\n                <div className=\"sidebar__searchContainer\">\r\n                    <SearchOutlined />\r\n                    <input placeholder=\"search or start new chat\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar__chats\">\r\n               {users.map(( user)=>{\r\n                    console.log(\"Side bar user user From \"+user_from);\r\n                    if(user.email===user_from || user.role===\"admin\"){\r\n                        console.log(\"Side bar user email \"+user.email);\r\n                       \r\n                    }else{\r\n                        console.log(\"Else part\")\r\n                        return < SidebarChat key={user._id} user={user} user_from={user_from}  messages={messages}/>\r\n                    }\r\n                })} \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar\r\n","F:\\Mern Stack\\Semester Project\\whatsapp-mern\\src\\SidebarChat.js",["111"],"import { Avatar, Grid } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport './SidebarChat.css';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\n\r\nconst SidebarChat=({user ,messages, user_from})=>{\r\n    let x=true;\r\n    return (\r\n        <Link to={`/user/${user._id}`}>\r\n            <div className= 'sidebarChat'>\r\n                <Avatar />\r\n                <div className=\"sidebarChat__info\">\r\n                   \r\n                    {messages.slice(0).reverse().map( (message)=>{\r\n                        if(message.user_from===user.email && message.user_to===user_from &&x ){\r\n                            console.log(\"from sidebar msgsss user-from \"+user_from+\"  \"+ user.email+ \"  and msg is \"+message.body );\r\n                            x=false;\r\n                            let msg=message.body;\r\n                            if(msg.length>35){\r\n                                msg=msg.slice(0,35)+\" ...\";\r\n                            }\r\n                            return (<div>\r\n                                <Grid container spacing={3} >\r\n                                    <Grid item xs={6}>\r\n                                        <h2>{user.name}</h2>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <span className=\"Sidebar__msgTime\">{message.time}</span>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <p>{msg}</p>\r\n                                </div>)\r\n                            \r\n                        }else if(message.user_to===user.email && message.user_from===user_from && x){\r\n                            console.log(\"from sidebar msgsss  user to \"+ user.email+ \"  and msg is \"+message.body );\r\n                            x=false;\r\n                            let msg=message.body;\r\n                            if(msg.length>35){\r\n                                msg=msg.slice(0,35)+\" ...\";\r\n                            }\r\n                            return (<div>\r\n                                    <Grid container spacing={3} >\r\n                                        <Grid item xs={6}>\r\n                                            <h2>{user.name}</h2>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <span className=\"Sidebar__msgTime\">{message.time}</span>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                   <p><span className=\"sidebar__read\">{message.viewed === true ? (\r\n                                        <span className={`${message.opened===true && \"chat__read\"}`}>\r\n                                            <DoneAllIcon />\r\n                                        </span>\r\n                                        \r\n                                    ): (\r\n                                        <CheckIcon />\r\n                                    )} </span>{msg}</p></div>)\r\n                        }\r\n                    })}\r\n                    \r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\nexport default SidebarChat\r\n","F:\\Mern Stack\\Semester Project\\whatsapp-mern\\src\\Login.js",["112","113"],"import { Button, TextField } from '@material-ui/core';\r\nimport React from 'react'\r\nimport \"./Login.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport userService from \"./services/UserService\"\r\nimport { useStateValue } from './StateProvider';\r\nimport { actionTypes } from './reducer';\r\nconst Login=(props)=> {\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n    const [{}, dispatch] = useStateValue();\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n                <img src=\"https://st2.depositphotos.com/1116329/7584/v/950/depositphotos_75840613-stock-illustration-vector-modern-phone-icon-in.jpg\"/>\r\n                <div className=\"login__text\">\r\n                    <h2>Sign in to Whatsapp</h2>\r\n                </div>\r\n                <div className=\"login__form\">\r\n                    <TextField\r\n                    label=\"email\"\r\n                    fullWidth\r\n                    value={email}\r\n                    onChange={(e) => {\r\n                        setEmail(e.target.value);\r\n                    }}\r\n                    />{\" \"}\r\n                    <br />\r\n                    <TextField\r\n                    label=\"password\"\r\n                    type=\"password\"\r\n                    fullWidth\r\n                    value={password}\r\n                    onChange={(e) => {\r\n                        setPassword(e.target.value);\r\n                    }}\r\n                    />{\" \"}\r\n                    <br />\r\n                    <Button\r\n                    \r\n                    onClick={(e) => {\r\n                        userService\r\n                        .login(email, password)\r\n                        .then((data) => {\r\n                            console.log(data);\r\n                            localStorage.setItem(\"user\", userService.getLoggedInUser().email);\r\n                            userService.setTime(userService.getLoggedInUser()._id, \"Online\");\r\n                            dispatch({\r\n                                type: actionTypes.SET_USER,\r\n                                user: userService.getLoggedInUser().email,\r\n                            });\r\n                                console.log(userService.getLoggedInUser().email);\r\n                            //   window.location.href = \"/\";     \r\n                        })\r\n                        .catch((err) => {\r\n                            console.log(err);\r\n                            toast.error(err.response.data, {\r\n                            position: toast.POSITION.TOP_LEFT,\r\n                            });\r\n                        });\r\n                    }}\r\n                    >\r\n                    Login\r\n                    </Button>\r\n                </div>\r\n                <Button type=\"submit\" onClick={(e) => {\r\n                                window.location.href = \"/register\";\r\n                            }}>\r\n                SignUp\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","F:\\Mern Stack\\Semester Project\\whatsapp-mern\\src\\services\\UserService.js",["114"],"import GenericService from \"./GenericService\";\r\nimport jwtDecode from \"jwt-decode\";\r\nclass UserService extends GenericService {\r\n  constructor() {\r\n    super();\r\n  }\r\n  login = (email, password) =>\r\n    new Promise((resolve, reject) => {\r\n      this.post(\"users/login\", { email, password })\r\n        .then((token) => {\r\n          localStorage.setItem(\"token\", token);\r\n          resolve(token);\r\n        })\r\n        .catch((err) => {\r\n          reject(err);\r\n        });\r\n    });\r\n  register = (name, email, password) =>\r\n    this.post(\"users/register\", { password, email, name });\r\n  logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"user\");\r\n  };\r\n  setTime = (_id, date)=>{\r\n    this.put(\"users/\"+_id,{date});\r\n  }\r\n  isLoggedIn = () => {\r\n    return localStorage.getItem(\"token\") ? true : false;\r\n  };\r\n  getLoggedInUser = () => {\r\n    try {\r\n      const jwt = localStorage.getItem(\"token\");\r\n      return jwtDecode(jwt);\r\n    } catch (ex) {\r\n      return null;\r\n    }\r\n  };\r\n  isAdmin = () => {\r\n    if (this.isLoggedIn()) {\r\n      if (this.getLoggedInUser().role === \"admin\") return true;\r\n      else return false;\r\n    } else return false;\r\n  };\r\n}\r\n\r\nlet userService = new UserService();\r\nexport default userService;\r\n","F:\\Mern Stack\\Semester Project\\whatsapp-mern\\src\\services\\GenericService.js",["115"],"import axios from 'axios';\r\naxios.defaults.baseURL= \"http://localhost:9000/api/\";\r\naxios.defaults.headers.common[\"x-auth-token\"] = localStorage.getItem(\"token\");\r\n\r\nclass GenericService{\r\n    constructor(){}\r\n    get=(url)=> new Promise((resolve, reject)=>{\r\n        axios.get(url).then((res)=>{\r\n            resolve(res.data);\r\n        }).catch((err)=>{\r\n            reject(err);\r\n        });\r\n    }) ;\r\n    post=(url, data)=>new Promise((resolve, reject)=>{\r\n        axios.post(url, data).then((res)=>{\r\n            resolve(res.data);\r\n        }).catch((err)=>{\r\n            reject(err);\r\n        });\r\n    });\r\n    delete=(url)=>new Promise((resolve, reject)=>{\r\n        axios.delete(url).then((res)=>{\r\n            resolve(res.data);\r\n        }).catch((err)=>{\r\n            reject(err);\r\n        });\r\n    });// for admin delete\r\n    put=(url, data)=>new Promise((resolve, reject)=>{\r\n        axios.put(url, data).then((res)=>{\r\n            resolve(res.data);\r\n        }).catch((err)=>{\r\n            reject(err);\r\n        });\r\n    });// for user delete\r\n   \r\n\r\n}\r\n\r\nexport default GenericService;","F:\\Mern Stack\\Semester Project\\whatsapp-mern\\src\\Register.js",["116"],"import { Button, TextField } from '@material-ui/core';\r\nimport React from 'react'\r\nimport \"./Login.css\";\r\nimport userService from \"./services/UserService\"\r\nimport { toast } from \"react-toastify\";\r\nconst Register=(props)=> {\r\n    const [name, setName] = React.useState(\"\");\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n    return (\r\n        \r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n                <img src=\"https://st2.depositphotos.com/1116329/7584/v/950/depositphotos_75840613-stock-illustration-vector-modern-phone-icon-in.jpg\"/>\r\n                <div className=\"login__text\">\r\n                    <h2>Sign in to Whatsapp</h2>\r\n                </div>\r\n                <div className=\"login__form\">\r\n                    <TextField\r\n                    label=\"name\"\r\n                    fullWidth\r\n                    value={name}\r\n                    onChange={(e) => {\r\n                        setName(e.target.value);\r\n                    }}\r\n                    />{\" \"}\r\n                    <br />\r\n                    <TextField\r\n                    label=\"email\"\r\n                    fullWidth\r\n                    value={email}\r\n                    onChange={(e) => {\r\n                        setEmail(e.target.value);\r\n                    }}\r\n                    />{\" \"}\r\n                    <br />\r\n                    <TextField\r\n                    label=\"password\"\r\n                    type=\"password\"\r\n                    fullWidth\r\n                    value={password}\r\n                    onChange={(e) => {\r\n                        setPassword(e.target.value);\r\n                    }}\r\n                    />{\" \"}\r\n                    <br />\r\n                     <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={(e) => {\r\n                            userService\r\n                            .register(name, email, password)\r\n                            .then((data) => {\r\n                                console.log(data);\r\n                                window.location.href = \"/\";\r\n                            })\r\n                            .catch((err) => {\r\n                                console.log(err);\r\n                                toast.error(err.response.data, {\r\n                                position: toast.POSITION.TOP_LEFT,\r\n                                });\r\n                            });\r\n                        }}\r\n                        >\r\n                    Register\r\n                    </Button>\r\n                </div>\r\n                <Button type=\"submit\" onClick={(e) => {\r\n                                window.location.href = \"/\";\r\n                            }}>\r\n                Sign In\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","F:\\Mern Stack\\Semester Project\\whatsapp-mern\\src\\reducer.js",[],"F:\\Mern Stack\\Semester Project\\whatsapp-mern\\src\\StateProvider.js",[],"F:\\Mern Stack\\Semester Project\\whatsapp-mern\\src\\services\\MessagesService.js",["117"],"import GenericService from \"./GenericService\";\r\n\r\nclass MessagesService extends GenericService{\r\n    constructor(){\r\n        super();\r\n    }\r\n    sendMessage=(user_to, user_from, body)=>{\r\n        this.post(\"messages/add\", {user_to, user_from, body});\r\n    }\r\n    viewMessages=()=>{\r\n        this.get(\"messages\");\r\n    }\r\n    userDelete =(_id, data)=>{\r\n        this.put(\"messages/trash/\"+_id, data);\r\n    }\r\n    AdminDelete =(_id)=>{\r\n        this.delete(\"messages/delete/\"+_id);\r\n    }\r\n    userViewed =(_id, data)=>{\r\n        this.put(\"messages/view/\"+_id, data);\r\n    }\r\n    userOpened =(_id,data )=>{\r\n        this.put(\"messages/open/\"+_id, data);\r\n    }\r\n\r\n\r\n}\r\nlet messagesService = new MessagesService();\r\nexport default messagesService;",{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"118","replacedBy":"122"},{"ruleId":"120","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":12,"column":26,"nodeType":"126","messageId":"127","endLine":12,"endColumn":31},{"ruleId":"124","severity":1,"message":"128","line":19,"column":10,"nodeType":"126","messageId":"127","endLine":19,"endColumn":19},{"ruleId":"124","severity":1,"message":"129","line":20,"column":18,"nodeType":"126","messageId":"127","endLine":20,"endColumn":26},{"ruleId":"130","severity":1,"message":"131","line":40,"column":29,"nodeType":"132","messageId":"133","endLine":40,"endColumn":31},{"ruleId":"134","severity":1,"message":"135","line":50,"column":32,"nodeType":"136","endLine":50,"endColumn":42,"suggestions":"137"},{"ruleId":"130","severity":1,"message":"131","line":39,"column":29,"nodeType":"132","messageId":"133","endLine":39,"endColumn":31},{"ruleId":"134","severity":1,"message":"138","line":53,"column":7,"nodeType":"136","endLine":53,"endColumn":11,"suggestions":"139"},{"ruleId":"130","severity":1,"message":"140","line":90,"column":40,"nodeType":"132","messageId":"141","endLine":90,"endColumn":42},{"ruleId":"130","severity":1,"message":"140","line":34,"column":34,"nodeType":"132","messageId":"141","endLine":34,"endColumn":36},{"ruleId":"130","severity":1,"message":"140","line":16,"column":64,"nodeType":"132","messageId":"141","endLine":16,"endColumn":66},{"ruleId":"142","severity":1,"message":"143","line":11,"column":12,"nodeType":"144","messageId":"145","endLine":11,"endColumn":14},{"ruleId":"146","severity":1,"message":"147","line":15,"column":17,"nodeType":"148","endLine":15,"endColumn":152},{"ruleId":"149","severity":1,"message":"150","line":4,"column":3,"nodeType":"151","messageId":"152","endLine":6,"endColumn":4},{"ruleId":"149","severity":1,"message":"150","line":6,"column":5,"nodeType":"151","messageId":"152","endLine":6,"endColumn":20},{"ruleId":"146","severity":1,"message":"147","line":14,"column":17,"nodeType":"148","endLine":14,"endColumn":152},{"ruleId":"149","severity":1,"message":"150","line":4,"column":5,"nodeType":"151","messageId":"152","endLine":6,"endColumn":6},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],["153"],["154"],"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","'userLogin' is assigned a value but never used.","'dispatch' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["155"],"React Hook useEffect has missing dependencies: 'last_scene', 'userTop', 'user_from', and 'users'. Either include them or remove the dependency array.",["156"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [messages, user]",{"range":"161","text":"162"},"Update the dependencies array to be: [id, last_scene, userTop, user_from, users]",{"range":"163","text":"164"},[1602,1612],"[messages, user]",[2257,2261],"[id, last_scene, userTop, user_from, users]"]